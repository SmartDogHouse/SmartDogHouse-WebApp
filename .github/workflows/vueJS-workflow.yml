name: Workflow front-end
on:
  push:
    branches:
      - main
jobs: 
  CoverageJob: 
    if: success()
    needs: 
      - TestJob
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "launch coverage"
        run: "echo \"skip\""
        shell: bash
  DeployJob: 
    if: "${{ needs.FindTagJob.outputs.outputTagJob != '' }}"
    needs: FindTagJob
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "Clone Repo with Checkout"
        uses: actions/checkout@v2
      - 
        env: 
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        name: "Create relese if tag commit contain a tag message"
        uses: actions/create-release@v1
        with: 
          draft: falses
          prerelease: false
          release_name: "Release ${{ needs.FindTagJob.outputs.outputTagJob }}"
          tag_name: "${{ needs.FindTagJob.outputs.outputTagJob }}"
  FindTagJob: 
    if: "success() && (${{github.head_ref}} == 'main')"
    needs: CoverageJob
    outputs: 
      outputTagJob: "${{ steps.relese_msg.outputs.RELESE_NAME }}"
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "Clone Repo with Checkout"
        uses: actions/checkout@v2
      - 
        id: extract_tag_msg
        name: "Extract relese message if present"
        run: "echo \"::set-output name=TAG_MSG::$(echo \"${{github.event.head_commit.message}}\" | grep -o -P '(?<=-TAG{).*(?=})')\" #Extract tag name if present\n"
        shell: bash
      - 
        name: "Fetch tag"
        run: "git fetch --prune --unshallow --tags #Pull all tags\n"
        shell: bash
      - 
        id: relese_msg
        name: "Fill tag if empty"
        run: |
            if [ "${{steps.extract_tag_msg.outputs.TAG_MSG}}" != "" ] #Check if the user has specified a name for the tag
            then #if yes use it
                echo "::set-output name=RELESE_NAME::$(echo ${{steps.extract_tag_msg.outputs.TAG_MSG}})" 
            else #if generate one new tag incrementing fixes number like x.y.z+1
                val=$(git describe --tags --abbrev=0)
                newval=$(echo ${val##*.})
                newval=$((newval+1))
                newval="${val%.*}.$newval"
                echo "::set-output name=RELESE_NAME::$(echo $newval)"
                echo $newval 
            fi
        shell: bash
  TelegramJobFailure: 
    if: failure()
    needs: 
      - CoverageJob
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "Send custom Telegram message"
        uses: appleboy/telegram-action@master
        with: 
          disable_web_page_preview: true
          format: html
          message: |
              ${{ github.event_name }} event,
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>${{ github.event.head_commit.message }}</b>
              ❌ <b>FAILED</b> ❌
          to: "${{ secrets.TELEGRAM_TO }}"
          token: "${{ secrets.TELEGRAM_TOKEN }}"
  TelegramJobSuccess: 
    if: success()
    needs: 
      - CoverageJob
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "Send custom Telegram message"
        uses: appleboy/telegram-action@master
        with: 
          disable_web_page_preview: true
          format: html
          message: |
              ${{ github.event_name }} event,
              on github.com/${{ github.repository }},
              by ${{ github.actor }}:
              <b>${{ github.event.head_commit.message }}</b>
              ✅ <b>SUCCEDED</b>
          to: "${{ secrets.TELEGRAM_TO }}"
          token: "${{ secrets.TELEGRAM_TOKEN }}"
  TestJob: 
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "Setup Git repo"
        uses: actions/checkout@v2
      - 
        name: "Test Code current branch"
        run: "echo \"skip\"\n\
            \x20           \n"
        shell: bash
name: "Workflow front-end"
true: 
  push: 
    branches: 
      - main

